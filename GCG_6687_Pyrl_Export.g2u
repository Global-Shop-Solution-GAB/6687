Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("Paylocity Export")
Gui.Form..Size(219,119)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.dtpStart.Create(DatePicker)
Gui.Form.dtpStart.Enabled(True)
Gui.Form.dtpStart.Visible(True)
Gui.Form.dtpStart.Zorder(0)
Gui.Form.dtpStart.Size(100,20)
Gui.Form.dtpStart.Position(5,20)
Gui.Form.dtpStart.CheckBox(False)
Gui.Form.dtpStart.FontName("Tahoma")
Gui.Form.dtpStart.FontSize(8.25)
Gui.Form.dtpStart.Value(1/1/0001 12:00:00 AM)
Gui.Form.dtpEnd.Create(DatePicker)
Gui.Form.dtpEnd.Enabled(True)
Gui.Form.dtpEnd.Visible(True)
Gui.Form.dtpEnd.Zorder(0)
Gui.Form.dtpEnd.Size(100,20)
Gui.Form.dtpEnd.Position(117,20)
Gui.Form.dtpEnd.CheckBox(False)
Gui.Form.dtpEnd.Value(1/1/0001 12:00:00 AM)
Gui.Form.dtpEnd.FontName("Tahoma")
Gui.Form.dtpEnd.FontSize(8.25)
Gui.Form.cmdExport.Create(Button)
Gui.Form.cmdExport.Enabled(True)
Gui.Form.cmdExport.Visible(True)
Gui.Form.cmdExport.Zorder(0)
Gui.Form.cmdExport.Size(75,23)
Gui.Form.cmdExport.Position(137,52)
Gui.Form.cmdExport.Caption("Export")
Gui.Form.cmdExport.FontName("Tahoma")
Gui.Form.cmdExport.FontSize(8.25)
Gui.Form.cmdExport.Event(Click,cmdExport_Click)
Gui.Form.lbl1.Create(Label,"Start Date",True,50,13,0,30,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.lbl2.Create(Label,"End Date",True,44,13,0,145,4,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl2.BorderStyle(0)
Gui.Form.chkPunch.Create(CheckBox)
Gui.Form.chkPunch.Enabled(True)
Gui.Form.chkPunch.Visible(True)
Gui.Form.chkPunch.Zorder(0)
Gui.Form.chkPunch.Size(75,20)
Gui.Form.chkPunch.Position(8,44)
Gui.Form.chkPunch.Caption("Punches")
Gui.Form.chkPunch.FontName("Tahoma")
Gui.Form.chkPunch.FontSize(8.25)
Gui.Form.chkWC.Create(CheckBox)
Gui.Form.chkWC.Enabled(True)
Gui.Form.chkWC.Visible(True)
Gui.Form.chkWC.Zorder(0)
Gui.Form.chkWC.Size(75,20)
Gui.Form.chkWC.Position(8,66)
Gui.Form.chkWC.Caption("WC Dept")
Gui.Form.chkWC.FontName("Tahoma")
Gui.Form.chkWC.FontSize(8.25)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
v.Local.sSQL.Declare
v.Local.dNewDate.Declare
v.Local.sRet.Declare
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.Try
	'Export Layout
	f.Data.Datatable.Create("dtExport", True)
	f.Data.Datatable.AddColumn("dtExport", "EmpID", "String")
	f.Data.Datatable.AddColumn("dtExport", "Dept", "String")
	f.Data.Datatable.AddColumn("dtExport", "EC", "String", "RT")
	f.Data.Datatable.AddColumn("dtExport", "Hours", "String")
	f.Data.Datatable.AddColumn("dtExport", "PunchIn", "String")
	f.Data.Datatable.AddColumn("dtExport", "PunchOut", "String")
	
	f.Data.DataTable.AddRow("dtExport", "EmpID", "Employee ID", "Dept", "Department", "EC", "Earning Code", "Hours", "Hours", "PunchIn", "Punch In", "PunchOut", "Punch Out")
	
	f.Data.Datatable.Create("dtDetExport", True)
	f.Data.Datatable.AddColumn("dtDetExport", "WorkOrder", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Suffix", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Seq", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "WC", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Date", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "TimeMil", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Hours", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Mins", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Min_sign", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "HoursDec", "Float")
	f.Data.DataTable.AddColumn("dtDetExport", "PunchIn", "String")
	f.Data.DataTable.AddColumn("dtDetExport", "PunchOut", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "WC_DEPT", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Dept_EMP", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Employee_Name", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "PL", "String")
	f.Data.Datatable.AddColumn("dtDetExport", "Empl", "String")
	
	f.Data.Datatable.Create("dtDetExportString", True)
	f.Data.Datatable.AddColumn("dtDetExportString", "WorkOrder", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Suffix", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Seq", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "WC", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Date", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "TimeMil", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Hours", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Mins", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Min_sign", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "HoursDec", "String")
	f.Data.DataTable.AddColumn("dtDetExportString", "PunchIn", "String")
	f.Data.DataTable.AddColumn("dtDetExportString", "PunchOut", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "WC_DEPT", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Dept_EMP", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Employee_Name", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "PL", "String")
	f.Data.Datatable.AddColumn("dtDetExportString", "Empl", "String")
	
	f.Data.DataTable.AddRow("dtDetExportString", "WorkOrder", "Work Order ID", "Suffix", "Suffix", "Seq", "Sequence", "WC", "Workcenter", "Date", "Date", "TimeMil", "Time Mil", "Hours", "Hours", "Mins", "Mins", "Min_sign", "Sign", "HoursDec", "Hours Dec", "PunchIn", "Punch In", "PunchOut", "Punch Out", "WC_DEPT", "PL Dept", "Dept_EMP", "Emp Dept", "Employee_Name", "Employee Name", "PL", "PL", "Empl", "Employee ID")
	
	f.Data.Datatable.Create("dtSumExport", True)
	f.Data.Datatable.AddColumn("dtSumExport", "Empl", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Empl_Name", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "WC_DEPT", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Date", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Time", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Hours", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Mins", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "Sign", "String")
	f.Data.Datatable.AddColumn("dtSumExport", "HoursDec", "String")
	
	f.Data.DataTable.AddRow("dtSumExport", "Empl", "Employee", "Empl_Name", "Employee Name", "WC_DEPT", "PL Dept", "Date", "Date", "Time", "Time", "Hours", "Hours", "Mins", "Mins", "Sign", "Sign", "HoursDec", "Hours Dec")
	
	f.Intrinsic.Control.CallSub(checkCustomFolder)
	'Change Date
	f.Intrinsic.Date.DateAdd("D", -7, v.Ambient.Date, v.Local.dNewDate)
	gui.Form.dtpStart.Value(v.Local.dNewDate)
	gui.Form.dtpEnd.Value(v.Ambient.Date)
	
'	'Set Date from PYRL Export.
'	f.ODBC.Connection!con.OpenCompanyConnection
'		f.Intrinsic.String.Build("select top 1 Beg_CYMD  from PYRL_LABOR_XFER where RUN_CYMD = '{0}' and RUN_TIME = '{1}'",V.Global.sRunCYMD, V.Global.sRunTime, V.Local.sSql)
'		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
'		'Date
'		f.Intrinsic.Date.ConvertDString(v.Local.sRet, "YYYYMMDD", v.Local.dNewDate)
'		gui.Form.dtpStart.Value(v.Local.dNewDate)
'		'End Date
'		f.Intrinsic.String.Build("select top 1 End_CYMD  from PYRL_LABOR_XFER where RUN_CYMD = '{0}' and RUN_TIME = '{1}'",V.Global.sRunCYMD, V.Global.sRunTime, V.Local.sSql)
'		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
'		'Date
'		f.Intrinsic.Date.ConvertDString(v.Local.sRet, "YYYYMMDD", v.Local.dNewDate)
'		gui.Form.dtpStart.Value(v.Local.dNewDate)
'	f.ODBC.Connection!con.Close
	gui.Form..Show
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.checkCustomFolder.Start
v.Local.sFolder.Declare
v.Local.bExists.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6687\", v.Caller.GlobalDir, v.Local.sFolder)
	f.Intrinsic.File.DirExists(v.Local.sFolder, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.File.CreateDir(v.Local.sFolder)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.checkCustomFolder.End

Program.Sub.cmdExport_Click.Start
f.Intrinsic.Control.Try
	'check which exports are selected
	f.Intrinsic.UI.InvokeWaitDialog("Exporting...")
	f.Intrinsic.Control.If(v.Screen.Form!chkPunch.Value, =, 1)
		f.Intrinsic.Control.CallSub("punchExport")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.Form!chkWC.Value, =, 1)
		f.Intrinsic.Control.CallSub("wcDeptExport")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.CloseWaitDialog
	'End Program.
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare
f.Intrinsic.UI.CloseWaitDialog
'Generic Error message.
f.Intrinsic.String.Build("Project GCG_6687_Pyrl_Export.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try
	'End Program.
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UnLoad.End

Program.Sub.punchExport.Start
v.Local.dStart.Declare
v.Local.dEnd.Declare
v.Local.sSQL.Declare
v.Local.sFile.Declare
v.Local.iCnt.Declare
v.Local.dFullDate.Declare
v.Local.sPunchIn.Declare
v.Local.sPunchOut.Declare
v.Local.fHours.Declare
v.Local.sName.Declare

v.Local.sTime.Declare
v.Local.fMin.Declare
v.Local.sRet.Declare
v.Local.sDept.Declare

v.Local.sFormattedHours.Declare
f.Intrinsic.Control.Try
	'Get Dates
	v.Local.dStart.Set(v.Screen.Form!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.Form!dtpEnd.Value)
	'Pull Time and Attendance
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select Employee, dept, date_in, time_in, date_out, time_out, Hours_MM, Hours_HH from V_TIME_ATTENDANCE where Charge_Date >= '{0}' and Charge_Date <= '{1}'", v.Local.dStart.PervasiveDate, v.Local.dEnd.PervasiveDate, v.Local.sSQL)
		f.Data.Datatable.CreateFromSQL("dtAttendance", "con", v.Local.sSQL)
	
		'Loop Through Records
		f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtAttendance.RowCount--, 1)
			'Get Punch in 
			v.Local.sTime.Set(v.DataTable.dtAttendance(v.Local.iCnt).time_in!FieldVal)
			f.Intrinsic.String.Split(v.Local.sTime, ":", v.Local.sTime)
			v.Local.fHours.Set(v.Local.sTime(0))
			v.Local.fMin.Set(v.Local.sTime(1))
			'Get Time.
			f.Intrinsic.Math.Div(v.Local.fMin, 60, v.Local.fMin)
			f.Intrinsic.Math.Round(v.Local.fMin, 2, v.Local.fMin)
			f.Intrinsic.Math.Add(v.Local.fMin, v.Local.fHours, v.Local.fHours)	
			f.Intrinsic.String.Format(v.Local.fHours, "00.00", v.Local.sFormattedHours)
			
			f.Intrinsic.String.Build("{0} {1}", v.DataTable.dtAttendance(v.Local.iCnt).date_in!FieldVal, v.Local.sFormattedHours, v.Local.sPunchIn)
			f.Intrinsic.Control.If(v.DataTable.dtAttendance(v.Local.iCnt).date_in!FieldVal, =, "1/1/1900")
				v.Local.sPunchIn.Set("")
			f.Intrinsic.Control.EndIf
			'Get Punch out
			v.Local.sTime.Set(v.DataTable.dtAttendance(v.Local.iCnt).time_out!FieldVal)
			f.Intrinsic.String.Split(v.Local.sTime, ":", v.Local.sTime)
			v.Local.fHours.Set(v.Local.sTime(0))
			v.Local.fMin.Set(v.Local.sTime(1))
			'Get Time.
			f.Intrinsic.Math.Div(v.Local.fMin, 60, v.Local.fMin)
			f.Intrinsic.Math.Round(v.Local.fMin, 2, v.Local.fMin)
			f.Intrinsic.Math.Add(v.Local.fMin, v.Local.fHours, v.Local.fHours)
			f.Intrinsic.String.Format(v.Local.fHours, "00.00", v.Local.sFormattedHours)
			
			f.Intrinsic.Control.If("09641", =, v.DataTable.dtAttendance(v.Local.iCnt).Employee!FieldValTrim)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.Build("{0} {1}", v.DataTable.dtAttendance(v.Local.iCnt).date_out!FieldVal, v.Local.sFormattedHours, v.Local.sPunchOut)
			f.Intrinsic.Control.If(v.DataTable.dtAttendance(v.Local.iCnt).date_out!FieldValTrim, =, "1/1/1900")
				v.Local.sPunchOut.Set("")
			f.Intrinsic.Control.EndIf
			'Jackson
			'Get Time.
			f.Intrinsic.Math.Div(v.DataTable.dtAttendance(v.Local.iCnt).Hours_MM!FieldVal, 60, v.Local.fHours)
			f.Intrinsic.Math.Round(v.Local.fHours, 2, v.Local.fHours)
			f.Intrinsic.Math.Add(v.DataTable.dtAttendance(v.Local.iCnt).Hours_HH!FieldVal, v.Local.fHours, v.Local.fHours)
			f.Intrinsic.String.Format(v.Local.fHours, "00.00", v.Local.sFormattedHours)
			'Get Dept
			f.Intrinsic.String.Build("Select top 1 Comments_1 from Employee_Mstr where Employee = '{0}'", v.DataTable.dtAttendance(v.Local.iCnt).Employee!FieldValTrim, v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
			f.Intrinsic.Control.If(v.Local.sRet.Trim, =, "-2")
				f.Intrinsic.String.Build("{0}-2", v.DataTable.dtAttendance(v.Local.iCnt).Dept!FieldValTrim, v.Local.sDept)
			f.Intrinsic.Control.Else
				v.Local.sDept.Set(v.DataTable.dtAttendance(v.Local.iCnt).Dept!FieldValTrim)
			f.Intrinsic.Control.EndIf
			'Fill Row
			f.Data.Datatable.AddRow("dtExport", "EmpID", v.DataTable.dtAttendance(v.Local.iCnt).Employee!FieldValTrim, "EC", "RT", "Hours", v.Local.sFormattedHours, "PunchIn", v.Local.sPunchIn, "PunchOut", v.Local.sPunchOut, "Dept", v.Local.sDept)
		f.Intrinsic.Control.Next(v.Local.iCnt)
	f.ODBC.Connection!con.Close
	'Set File Loc
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6687\", v.Caller.GlobalDir, v.Local.sFile)
	f.Intrinsic.String.Build("Payroll_Punch_Export_{0}.csv", v.Ambient.Date.PervasiveDate, v.Local.sName)
	'Get File Loc
	f.Intrinsic.UI.ShowSaveFileDialog(v.Local.sName, "CSV|*.csv", v.Local.sFile, v.Local.sFile)
	f.Intrinsic.Control.If(v.Local.sFile, <>, "***CANCEL***")
		f.Data.Datatable.SaveToCSV("dtExport", v.Local.sFile, False)
	f.Intrinsic.Control.EndIf
	'End Program.
'	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.punchExport.End

Program.Sub.wcDeptExport.Start
v.Local.dStart.Declare
v.Local.dEnd.Declare
v.Local.sSQL.Declare
v.Local.sFile.Declare
v.Local.iCnt.Declare
v.Local.sFilter.Declare

v.Local.sFormattedHours.Declare
v.Local.sTime.Declare
v.Local.fHours.Declare
v.Local.fMin.Declare
v.Local.fTimeDec.Declare
v.Local.sFormatHours.Declare
v.Local.sTimeMil.Declare
v.Local.sTemp.Declare
v.Local.sSign.Declare
v.Local.sDept.Declare
v.Local.sDateFormat.Declare
v.Local.sName.Declare
v.Local.sPunchIn.Declare
v.Local.sPunchOut.Declare
f.Intrinsic.Control.Try
'Get Dates
	v.Local.dStart.Set(v.Screen.Form!dtpStart.Value)
	v.Local.dEnd.Set(v.Screen.Form!dtpEnd.Value)
	'Pull Job Detail
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select a.Job, a.Suffix, a.Seq, a.machine as WC, a.Charge_Date, '' as TimeMil, '' as Hours, '' as Mins, '' as min_sign, a.hours_worked as HoursDec, a.start_time, a.end_time, a.date_out, d.Descr as WC_DEPT, c.dept_employee as Dept_EMP, a.Employee as Employee_Name, b.Product_Line as PL, a.empl, c.Comments_1 from V_JOB_DETAIL a left join V_JOB_HEADER b on a.Job = b.job and a.suffix = b.suffix left Join V_EMPLOYEE_MSTR c on a.empl = c.employee left join V_PL_MASTER d on b.Product_Line = d.Prod_line where a.lmo = 'L' and a.Charge_Date >= '{0}' and a.Charge_Date <= '{1}'", v.Local.dStart.PervasiveDate, v.Local.dEnd.PervasiveDate, v.Local.sSQL)
		f.Data.Datatable.CreateFromSQL("dtDetail", "con", v.Local.sSQL)
	f.ODBC.Connection!con.Close
	'Loop Through 
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtDetail.RowCount--, 1)
	'Get Punch in 
		v.Local.sTime.Set(v.DataTable.dtDetail(v.Local.iCnt).start_time!FieldVal)
'		f.Intrinsic.String.Split(v.Local.sTime, ":", v.Local.sTime)
'		v.Local.fHours.Set(v.Local.sTime(0))
'		v.Local.fMin.Set(v.Local.sTime(1))
		
		f.Intrinsic.String.Left(v.Local.sTime, 2, v.Local.fHours)
		f.Intrinsic.String.Right(v.Local.sTime, 2, v.Local.fMin)
		'Get Time.
		f.Intrinsic.Math.Div(v.Local.fMin, 60, v.Local.fMin)
		f.Intrinsic.Math.Round(v.Local.fMin, 2, v.Local.fMin)
		f.Intrinsic.Math.Add(v.Local.fMin, v.Local.fHours, v.Local.fHours)	
		f.Intrinsic.String.Format(v.Local.fHours, "00.00", v.Local.sFormattedHours)
		
		f.Intrinsic.String.Build("{0} {1}", v.DataTable.dtDetail(v.Local.iCnt).Charge_Date!FieldVal, v.Local.sFormattedHours, v.Local.sPunchIn)
		f.Intrinsic.Control.If(v.DataTable.dtDetail(v.Local.iCnt).Charge_Date!FieldVal, =, "1/1/1900")
			v.Local.sPunchIn.Set("")
		f.Intrinsic.Control.EndIf
		'Get Punch out
		v.Local.sTime.Set(v.DataTable.dtDetail(v.Local.iCnt).end_time!FieldVal)
'		f.Intrinsic.String.Split(v.Local.sTime, ":", v.Local.sTime)
'		v.Local.fHours.Set(v.Local.sTime(0))
'		v.Local.fMin.Set(v.Local.sTime(1))

		f.Intrinsic.String.Left(v.Local.sTime, 2, v.Local.fHours)
		f.Intrinsic.String.Right(v.Local.sTime, 2, v.Local.fMin)
		'Get Time.
		f.Intrinsic.Math.Div(v.Local.fMin, 60, v.Local.fMin)
		f.Intrinsic.Math.Round(v.Local.fMin, 2, v.Local.fMin)
		f.Intrinsic.Math.Add(v.Local.fMin, v.Local.fHours, v.Local.fHours)
		f.Intrinsic.String.Format(v.Local.fHours, "00.00", v.Local.sFormattedHours)
		
		f.Intrinsic.String.Build("{0} {1}", v.DataTable.dtDetail(v.Local.iCnt).date_out!FieldVal, v.Local.sFormattedHours, v.Local.sPunchOut)
		f.Intrinsic.Control.If(v.DataTable.dtDetail(v.Local.iCnt).date_out!FieldValTrim, =, "1/1/1900")
			v.Local.sPunchOut.Set("")
		f.Intrinsic.Control.EndIf
	
		'Get time from table
		v.Local.fTimeDec.Set(v.DataTable.dtDetail(v.Local.iCnt).HoursDec!FieldVal)
		'Get sign
		f.Intrinsic.Control.If(v.Local.fTimeDec, <, 0)
			v.Local.sSign.Set("-")
		f.Intrinsic.Control.Else
			v.Local.sSign.Set("")
		f.Intrinsic.Control.EndIf
		'Split into hours and mins
		f.Intrinsic.Math.Round(v.Local.fTimeDec, 2, v.Local.fTimeDec)
		f.Intrinsic.String.Format(v.Local.fTimeDec, "0.00", v.Local.sFormatHours)
		f.Intrinsic.String.Split(v.Local.sFormatHours, ".", v.Local.sTemp)
		v.Local.fHours.Set(v.Local.sTemp(0))
		f.Intrinsic.Math.Abs(v.Local.fHours, v.Local.fHours)
		v.Local.fMin.Set(v.Local.sTemp(1))
		f.Intrinsic.Math.Mult(v.Local.fMin, 0.60, v.Local.fMin)
		f.Intrinsic.Math.Round(v.Local.fMin, 0, v.Local.fMin)
		'Join Min
		f.Intrinsic.String.Build("{0}:{1}{2}", v.Local.fHours, v.Local.fMin, v.Local.sSign, v.Local.sTimeMil)
		'Get Countycode
		f.Intrinsic.Control.If(v.DataTable.dtDetail(v.Local.iCnt).Comments_1!FieldValTrim, =, "-2")
			f.Intrinsic.String.Build("{0}-2", v.DataTable.dtDetail(v.Local.iCnt).WC_DEPT!FieldValTrim, v.Local.sDept)
		f.Intrinsic.Control.Else
			v.Local.sDept.Set(v.DataTable.dtDetail(v.Local.iCnt).WC_DEPT!FieldValTrim)
			f.Intrinsic.Control.If(v.Local.sDept.Trim, =, "IND")
				v.Local.sDept.Set("ZIND")
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		'Format Date
		f.Intrinsic.String.Format(v.DataTable.dtDetail(v.Local.iCnt).Charge_Date!FieldVal, "MM/DD/YYYY", v.Local.sDateFormat)
		'Set Values
		f.Data.Datatable.AddRow("dtDetExport", "WorkOrder", v.DataTable.dtDetail(v.Local.iCnt).Job!FieldValTrim, "Suffix", v.DataTable.dtDetail(v.Local.iCnt).Suffix!FieldValTrim, "Seq", v.DataTable.dtDetail(v.Local.iCnt).Seq!FieldValTrim, "WC", v.DataTable.dtDetail(v.Local.iCnt).WC!FieldValTrim, "Date", v.Local.sDateFormat, "WC_DEPT", v.Local.sDept, "Dept_EMP", v.DataTable.dtDetail(v.Local.iCnt).Dept_Emp!FieldValTrim, "PL", v.DataTable.dtDetail(v.Local.iCnt).PL!FieldValTrim, "Empl", v.DataTable.dtDetail(v.Local.iCnt).Empl!FieldValTrim, "TimeMil", v.Local.sTimeMil, "Hours", v.Local.fHours, "Mins", v.Local.fMin, "Min_sign", v.Local.sSign, "PunchIn", v.Local.sPunchIn, "PunchOut", v.Local.sPunchOut, "HoursDec", v.Local.fTimeDec, "Employee_Name", v.DataTable.dtDetail(v.Local.iCnt).Employee_Name!FieldValTrim)
		
		f.Data.Datatable.AddRow("dtDetExportString", "WorkOrder", v.DataTable.dtDetail(v.Local.iCnt).Job!FieldValTrim, "Suffix", v.DataTable.dtDetail(v.Local.iCnt).Suffix!FieldValTrim, "Seq", v.DataTable.dtDetail(v.Local.iCnt).Seq!FieldValTrim, "WC", v.DataTable.dtDetail(v.Local.iCnt).WC!FieldValTrim, "Date", v.Local.sDateFormat, "WC_DEPT", v.Local.sDept, "Dept_EMP", v.DataTable.dtDetail(v.Local.iCnt).Dept_Emp!FieldValTrim, "PL", v.DataTable.dtDetail(v.Local.iCnt).PL!FieldValTrim, "Empl", v.DataTable.dtDetail(v.Local.iCnt).Empl!FieldValTrim, "TimeMil", v.Local.sTimeMil, "Hours", v.Local.fHours, "Mins", v.Local.fMin, "Min_sign", v.Local.sSign, "PunchIn", v.Local.sPunchIn, "PunchOut", v.Local.sPunchOut, "HoursDec", v.Local.fTimeDec, "Employee_Name", v.DataTable.dtDetail(v.Local.iCnt).Employee_Name!FieldValTrim)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'Set File Loc
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6687\", v.Caller.GlobalDir, v.Local.sFile)
	f.Intrinsic.String.Build("Payroll_Det_Export_{0}.csv", v.Ambient.Date.PervasiveDate, v.Local.sName)
	'Get File Loc
	f.Intrinsic.UI.ShowSaveFileDialog(v.Local.sName, "CSV|*.csv", v.Local.sFile, v.Local.sFile)
	f.Intrinsic.Control.If(v.Local.sFile, <>, "***CANCEL***")
		f.Data.Datatable.SaveToCSV("dtDetExportString", v.Local.sFile, False)
	f.Intrinsic.Control.EndIf
	
	'Get Summary
	f.Data.DataView.Create("dtDetExport", "dvDetExport", 22)
	f.Data.DataView.ToDataTableDistinct("dtDetExport", "dvDetExport", "dtUnique", "Empl*!*WC_DEPT*!*Date*!*Employee_Name")
	'Get Summary Hours
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtUnique.RowCount--, 1)
		'Create unique Filter
		f.Intrinsic.String.Build("Empl = '{0}' and WC_Dept = '{1}' and Date = '{2}'", v.DataTable.dtUnique(v.Local.iCnt).Empl!FieldValTrim, v.DataTable.dtUnique(v.Local.iCnt).WC_DEPT!FieldValTrim, v.DataTable.dtUnique(v.Local.iCnt).Date!FieldValTrim, v.Local.sFilter)
		'Get Sum Hours
		f.Data.Datatable.Compute("dtDetExport", "Sum(HoursDec)", v.Local.sFilter, v.Local.fTimeDec)
		'Split into hours and mins
		f.Intrinsic.Math.Round(v.Local.fTimeDec, 2, v.Local.fTimeDec)
		f.Intrinsic.String.Format(v.Local.fTimeDec, "0.00", v.Local.sFormatHours)
		f.Intrinsic.String.Split(v.Local.sFormatHours, ".", v.Local.sTemp)
		v.Local.fHours.Set(v.Local.sTemp(0))
		f.Intrinsic.Math.Abs(v.Local.fHours, v.Local.fHours)
		v.Local.fMin.Set(v.Local.sTemp(1))
		f.Intrinsic.Math.Mult(v.Local.fMin, 0.60, v.Local.fMin)
		f.Intrinsic.Math.Round(v.Local.fMin, 0, v.Local.fMin)
		'Join Min
		f.Intrinsic.String.Build("{0}:{1}{2}", v.Local.fHours, v.Local.fMin, v.Local.sSign, v.Local.sTimeMil)
		'Add Row
		f.Data.Datatable.AddRow("dtSumExport", "Empl", v.DataTable.dtUnique(v.Local.iCnt).Empl!FieldValTrim, "Empl_Name", v.DataTable.dtUnique(v.Local.iCnt).Employee_Name!FieldValTrim, "WC_DEPT", v.DataTable.dtUnique(v.Local.iCnt).WC_DEPT!FieldValTrim, "Date", v.DataTable.dtUnique(v.Local.iCnt).Date!FieldValTrim, "Time", v.Local.sTimeMil, "Hours", v.Local.fHours, "Mins", v.Local.fMin, "Sign", v.Local.sSign, "HoursDec", v.Local.fTimeDec)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'Set File Loc
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6687\", v.Caller.GlobalDir, v.Local.sFile)
	f.Intrinsic.String.Build("Payroll_Det_Sum_Export_{0}.csv", v.Ambient.Date.PervasiveDate, v.Local.sName)
	'Get File Loc
	f.Intrinsic.UI.ShowSaveFileDialog(v.Local.sName, "CSV|*.csv", v.Local.sFile, v.Local.sFile)
	f.Intrinsic.Control.If(v.Local.sFile, <>, "***CANCEL***")
		f.Data.Datatable.SaveToCSV("dtSumExport", v.Local.sFile, False)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.wcDeptExport.End

Program.Sub.Comments.Start
${$5$}$20.1.8523.27591$}$1
${$6$}$aanazco$}$20230615114948784$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOzuHsgUVyN91wKAfS5fZmJYWYoh7vsyyLGBZ5WRTNwTow=
Program.Sub.Comments.End